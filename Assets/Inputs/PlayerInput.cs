//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Inputs/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player1"",
            ""id"": ""8580997b-dc8a-40e9-9622-d5aa649c5353"",
            ""actions"": [
                {
                    ""name"": ""JoystickMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0093e3c6-5429-4568-96f6-d7911af653e9"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardMovement"",
                    ""type"": ""Button"",
                    ""id"": ""c0048adf-145a-4858-83ca-fa7aab96c591"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Observe"",
                    ""type"": ""Button"",
                    ""id"": ""cf2127c5-53c2-4c28-b578-b8e179872fbf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JoinLeaveGame"",
                    ""type"": ""Button"",
                    ""id"": ""5bcf6aa3-d6af-444d-9989-45a87ad11e54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""33bea155-45b9-4c8e-a93b-f83b6dc9c99a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoystickMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96223719-3ef8-49b4-a6b5-361af0a08457"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efe45fa9-a89f-428f-8550-9bf2ee403f4b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ec56922-af19-415b-bebc-8fed07e7d5c8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""605577a4-672e-4236-b710-3188706d7e00"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49f04d44-e2ed-4588-926d-7c1f67897f34"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Observe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc652231-4622-47a5-a78b-7ce5211feffb"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoinLeaveGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player2"",
            ""id"": ""bd00acf5-11f0-48e4-a05b-f623f3479a3a"",
            ""actions"": [
                {
                    ""name"": ""JoystickMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d0621844-70a0-4002-87fb-5cde3ac2efa7"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardMovement"",
                    ""type"": ""Button"",
                    ""id"": ""69945751-44b5-4e21-814e-306f78819b40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Observe"",
                    ""type"": ""Button"",
                    ""id"": ""22c1e956-e0b5-451f-9af0-64a2b81e85b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JoinLeaveGame"",
                    ""type"": ""Button"",
                    ""id"": ""7416665b-2ec9-4de2-8ff6-3093bf8f291b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""731a9337-a3e9-4a8b-812e-3a0c74c7354e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoystickMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5ab2c10-cb8a-4cfa-a58d-21fc4bcf7880"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""072106ca-7493-4557-a122-f6d546f9f51e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d213fb4c-3c57-4dd4-aa4b-4a617185d74e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3a15c66-69f5-4bd4-a269-6df0cf6cfb59"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba0e92f7-9ab6-4ed2-a75b-8f9d0968c820"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Observe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b260f18a-29c3-4772-b6ec-ae77774858d8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoinLeaveGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player3"",
            ""id"": ""6353d483-f12f-490a-96c6-448cbc2ba2ba"",
            ""actions"": [
                {
                    ""name"": ""JoystickMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""32bfc7c1-a4db-4673-9ddf-c4ba9c92da67"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardMovement"",
                    ""type"": ""Button"",
                    ""id"": ""77070602-61cd-49c2-a0d8-c347fa5ce35b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Observe"",
                    ""type"": ""Button"",
                    ""id"": ""b2e8f158-ff29-402e-8e22-76e29652e564"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JoinLeaveGame"",
                    ""type"": ""Button"",
                    ""id"": ""20371a6d-7d5b-41ae-8739-2e29c6084e25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""94eac3d7-0433-4105-add1-7bfbf3d1f8ff"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoystickMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5387324-9029-4812-81e4-a6993ab62cf0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""080b5258-c2ad-4b09-83a7-353bbd647c65"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0eabe454-357e-4b43-8a09-3b52af6e4bfa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4826fd0-4aa3-4f71-aa4a-c7850ffb4fa2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e2012ae-e35d-45f9-9ab6-7a383a84cc06"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Observe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8787f98b-dd25-445b-913b-70bd7afbef5e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoinLeaveGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Global"",
            ""id"": ""7b896438-0929-4b37-83e2-cf09b012c185"",
            ""actions"": [
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""4084f1eb-0901-4f85-8c04-c54107141e4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""25bde512-ecf8-4dce-a046-a23461c5bb40"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player1
        m_Player1 = asset.FindActionMap("Player1", throwIfNotFound: true);
        m_Player1_JoystickMovement = m_Player1.FindAction("JoystickMovement", throwIfNotFound: true);
        m_Player1_KeyboardMovement = m_Player1.FindAction("KeyboardMovement", throwIfNotFound: true);
        m_Player1_Observe = m_Player1.FindAction("Observe", throwIfNotFound: true);
        m_Player1_JoinLeaveGame = m_Player1.FindAction("JoinLeaveGame", throwIfNotFound: true);
        // Player2
        m_Player2 = asset.FindActionMap("Player2", throwIfNotFound: true);
        m_Player2_JoystickMovement = m_Player2.FindAction("JoystickMovement", throwIfNotFound: true);
        m_Player2_KeyboardMovement = m_Player2.FindAction("KeyboardMovement", throwIfNotFound: true);
        m_Player2_Observe = m_Player2.FindAction("Observe", throwIfNotFound: true);
        m_Player2_JoinLeaveGame = m_Player2.FindAction("JoinLeaveGame", throwIfNotFound: true);
        // Player3
        m_Player3 = asset.FindActionMap("Player3", throwIfNotFound: true);
        m_Player3_JoystickMovement = m_Player3.FindAction("JoystickMovement", throwIfNotFound: true);
        m_Player3_KeyboardMovement = m_Player3.FindAction("KeyboardMovement", throwIfNotFound: true);
        m_Player3_Observe = m_Player3.FindAction("Observe", throwIfNotFound: true);
        m_Player3_JoinLeaveGame = m_Player3.FindAction("JoinLeaveGame", throwIfNotFound: true);
        // Global
        m_Global = asset.FindActionMap("Global", throwIfNotFound: true);
        m_Global_Quit = m_Global.FindAction("Quit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player1
    private readonly InputActionMap m_Player1;
    private IPlayer1Actions m_Player1ActionsCallbackInterface;
    private readonly InputAction m_Player1_JoystickMovement;
    private readonly InputAction m_Player1_KeyboardMovement;
    private readonly InputAction m_Player1_Observe;
    private readonly InputAction m_Player1_JoinLeaveGame;
    public struct Player1Actions
    {
        private @PlayerInput m_Wrapper;
        public Player1Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @JoystickMovement => m_Wrapper.m_Player1_JoystickMovement;
        public InputAction @KeyboardMovement => m_Wrapper.m_Player1_KeyboardMovement;
        public InputAction @Observe => m_Wrapper.m_Player1_Observe;
        public InputAction @JoinLeaveGame => m_Wrapper.m_Player1_JoinLeaveGame;
        public InputActionMap Get() { return m_Wrapper.m_Player1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player1Actions set) { return set.Get(); }
        public void SetCallbacks(IPlayer1Actions instance)
        {
            if (m_Wrapper.m_Player1ActionsCallbackInterface != null)
            {
                @JoystickMovement.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnJoystickMovement;
                @JoystickMovement.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnJoystickMovement;
                @JoystickMovement.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnJoystickMovement;
                @KeyboardMovement.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnKeyboardMovement;
                @KeyboardMovement.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnKeyboardMovement;
                @KeyboardMovement.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnKeyboardMovement;
                @Observe.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnObserve;
                @Observe.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnObserve;
                @Observe.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnObserve;
                @JoinLeaveGame.started -= m_Wrapper.m_Player1ActionsCallbackInterface.OnJoinLeaveGame;
                @JoinLeaveGame.performed -= m_Wrapper.m_Player1ActionsCallbackInterface.OnJoinLeaveGame;
                @JoinLeaveGame.canceled -= m_Wrapper.m_Player1ActionsCallbackInterface.OnJoinLeaveGame;
            }
            m_Wrapper.m_Player1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @JoystickMovement.started += instance.OnJoystickMovement;
                @JoystickMovement.performed += instance.OnJoystickMovement;
                @JoystickMovement.canceled += instance.OnJoystickMovement;
                @KeyboardMovement.started += instance.OnKeyboardMovement;
                @KeyboardMovement.performed += instance.OnKeyboardMovement;
                @KeyboardMovement.canceled += instance.OnKeyboardMovement;
                @Observe.started += instance.OnObserve;
                @Observe.performed += instance.OnObserve;
                @Observe.canceled += instance.OnObserve;
                @JoinLeaveGame.started += instance.OnJoinLeaveGame;
                @JoinLeaveGame.performed += instance.OnJoinLeaveGame;
                @JoinLeaveGame.canceled += instance.OnJoinLeaveGame;
            }
        }
    }
    public Player1Actions @Player1 => new Player1Actions(this);

    // Player2
    private readonly InputActionMap m_Player2;
    private IPlayer2Actions m_Player2ActionsCallbackInterface;
    private readonly InputAction m_Player2_JoystickMovement;
    private readonly InputAction m_Player2_KeyboardMovement;
    private readonly InputAction m_Player2_Observe;
    private readonly InputAction m_Player2_JoinLeaveGame;
    public struct Player2Actions
    {
        private @PlayerInput m_Wrapper;
        public Player2Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @JoystickMovement => m_Wrapper.m_Player2_JoystickMovement;
        public InputAction @KeyboardMovement => m_Wrapper.m_Player2_KeyboardMovement;
        public InputAction @Observe => m_Wrapper.m_Player2_Observe;
        public InputAction @JoinLeaveGame => m_Wrapper.m_Player2_JoinLeaveGame;
        public InputActionMap Get() { return m_Wrapper.m_Player2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2Actions set) { return set.Get(); }
        public void SetCallbacks(IPlayer2Actions instance)
        {
            if (m_Wrapper.m_Player2ActionsCallbackInterface != null)
            {
                @JoystickMovement.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnJoystickMovement;
                @JoystickMovement.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnJoystickMovement;
                @JoystickMovement.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnJoystickMovement;
                @KeyboardMovement.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnKeyboardMovement;
                @KeyboardMovement.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnKeyboardMovement;
                @KeyboardMovement.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnKeyboardMovement;
                @Observe.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnObserve;
                @Observe.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnObserve;
                @Observe.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnObserve;
                @JoinLeaveGame.started -= m_Wrapper.m_Player2ActionsCallbackInterface.OnJoinLeaveGame;
                @JoinLeaveGame.performed -= m_Wrapper.m_Player2ActionsCallbackInterface.OnJoinLeaveGame;
                @JoinLeaveGame.canceled -= m_Wrapper.m_Player2ActionsCallbackInterface.OnJoinLeaveGame;
            }
            m_Wrapper.m_Player2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @JoystickMovement.started += instance.OnJoystickMovement;
                @JoystickMovement.performed += instance.OnJoystickMovement;
                @JoystickMovement.canceled += instance.OnJoystickMovement;
                @KeyboardMovement.started += instance.OnKeyboardMovement;
                @KeyboardMovement.performed += instance.OnKeyboardMovement;
                @KeyboardMovement.canceled += instance.OnKeyboardMovement;
                @Observe.started += instance.OnObserve;
                @Observe.performed += instance.OnObserve;
                @Observe.canceled += instance.OnObserve;
                @JoinLeaveGame.started += instance.OnJoinLeaveGame;
                @JoinLeaveGame.performed += instance.OnJoinLeaveGame;
                @JoinLeaveGame.canceled += instance.OnJoinLeaveGame;
            }
        }
    }
    public Player2Actions @Player2 => new Player2Actions(this);

    // Player3
    private readonly InputActionMap m_Player3;
    private IPlayer3Actions m_Player3ActionsCallbackInterface;
    private readonly InputAction m_Player3_JoystickMovement;
    private readonly InputAction m_Player3_KeyboardMovement;
    private readonly InputAction m_Player3_Observe;
    private readonly InputAction m_Player3_JoinLeaveGame;
    public struct Player3Actions
    {
        private @PlayerInput m_Wrapper;
        public Player3Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @JoystickMovement => m_Wrapper.m_Player3_JoystickMovement;
        public InputAction @KeyboardMovement => m_Wrapper.m_Player3_KeyboardMovement;
        public InputAction @Observe => m_Wrapper.m_Player3_Observe;
        public InputAction @JoinLeaveGame => m_Wrapper.m_Player3_JoinLeaveGame;
        public InputActionMap Get() { return m_Wrapper.m_Player3; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player3Actions set) { return set.Get(); }
        public void SetCallbacks(IPlayer3Actions instance)
        {
            if (m_Wrapper.m_Player3ActionsCallbackInterface != null)
            {
                @JoystickMovement.started -= m_Wrapper.m_Player3ActionsCallbackInterface.OnJoystickMovement;
                @JoystickMovement.performed -= m_Wrapper.m_Player3ActionsCallbackInterface.OnJoystickMovement;
                @JoystickMovement.canceled -= m_Wrapper.m_Player3ActionsCallbackInterface.OnJoystickMovement;
                @KeyboardMovement.started -= m_Wrapper.m_Player3ActionsCallbackInterface.OnKeyboardMovement;
                @KeyboardMovement.performed -= m_Wrapper.m_Player3ActionsCallbackInterface.OnKeyboardMovement;
                @KeyboardMovement.canceled -= m_Wrapper.m_Player3ActionsCallbackInterface.OnKeyboardMovement;
                @Observe.started -= m_Wrapper.m_Player3ActionsCallbackInterface.OnObserve;
                @Observe.performed -= m_Wrapper.m_Player3ActionsCallbackInterface.OnObserve;
                @Observe.canceled -= m_Wrapper.m_Player3ActionsCallbackInterface.OnObserve;
                @JoinLeaveGame.started -= m_Wrapper.m_Player3ActionsCallbackInterface.OnJoinLeaveGame;
                @JoinLeaveGame.performed -= m_Wrapper.m_Player3ActionsCallbackInterface.OnJoinLeaveGame;
                @JoinLeaveGame.canceled -= m_Wrapper.m_Player3ActionsCallbackInterface.OnJoinLeaveGame;
            }
            m_Wrapper.m_Player3ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @JoystickMovement.started += instance.OnJoystickMovement;
                @JoystickMovement.performed += instance.OnJoystickMovement;
                @JoystickMovement.canceled += instance.OnJoystickMovement;
                @KeyboardMovement.started += instance.OnKeyboardMovement;
                @KeyboardMovement.performed += instance.OnKeyboardMovement;
                @KeyboardMovement.canceled += instance.OnKeyboardMovement;
                @Observe.started += instance.OnObserve;
                @Observe.performed += instance.OnObserve;
                @Observe.canceled += instance.OnObserve;
                @JoinLeaveGame.started += instance.OnJoinLeaveGame;
                @JoinLeaveGame.performed += instance.OnJoinLeaveGame;
                @JoinLeaveGame.canceled += instance.OnJoinLeaveGame;
            }
        }
    }
    public Player3Actions @Player3 => new Player3Actions(this);

    // Global
    private readonly InputActionMap m_Global;
    private IGlobalActions m_GlobalActionsCallbackInterface;
    private readonly InputAction m_Global_Quit;
    public struct GlobalActions
    {
        private @PlayerInput m_Wrapper;
        public GlobalActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Quit => m_Wrapper.m_Global_Quit;
        public InputActionMap Get() { return m_Wrapper.m_Global; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GlobalActions set) { return set.Get(); }
        public void SetCallbacks(IGlobalActions instance)
        {
            if (m_Wrapper.m_GlobalActionsCallbackInterface != null)
            {
                @Quit.started -= m_Wrapper.m_GlobalActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_GlobalActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_GlobalActionsCallbackInterface.OnQuit;
            }
            m_Wrapper.m_GlobalActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
            }
        }
    }
    public GlobalActions @Global => new GlobalActions(this);
    public interface IPlayer1Actions
    {
        void OnJoystickMovement(InputAction.CallbackContext context);
        void OnKeyboardMovement(InputAction.CallbackContext context);
        void OnObserve(InputAction.CallbackContext context);
        void OnJoinLeaveGame(InputAction.CallbackContext context);
    }
    public interface IPlayer2Actions
    {
        void OnJoystickMovement(InputAction.CallbackContext context);
        void OnKeyboardMovement(InputAction.CallbackContext context);
        void OnObserve(InputAction.CallbackContext context);
        void OnJoinLeaveGame(InputAction.CallbackContext context);
    }
    public interface IPlayer3Actions
    {
        void OnJoystickMovement(InputAction.CallbackContext context);
        void OnKeyboardMovement(InputAction.CallbackContext context);
        void OnObserve(InputAction.CallbackContext context);
        void OnJoinLeaveGame(InputAction.CallbackContext context);
    }
    public interface IGlobalActions
    {
        void OnQuit(InputAction.CallbackContext context);
    }
}
